<?xml version="1.0"?>
<ruleset name="Slevomat Async SMTP Mailer">
	<rule ref="vendor/consistence/coding-standard/Consistence/ruleset.xml">
		<exclude name="Squiz.Functions.GlobalFunction.Found"/>
		<exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedClassNameAfterKeyword"/>
		<exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedClassNameInAnnotation"/>
		<exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedExceptions"/>
		<exclude name="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly"/>
		<exclude name="Consistence.Exceptions.ExceptionDeclaration"/>
	</rule>
	<rule ref="SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses">
		<properties>
			<property name="caseSensitive" value="false"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes">
		<properties>
			<property name="newlinesCountBetweenOpenTagAndDeclare" value="0"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.TypeHints.TypeHintDeclaration">
		<properties>
			<property name="usefulAnnotations" type="array" value="
				@dataProvider,
				@requires
			"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.ControlStructures.AssignmentInCondition"/>
	<rule ref="SlevomatCodingStandard.ControlStructures.DisallowEqualOperators"/>
	<rule ref="SlevomatCodingStandard.ControlStructures.EarlyExit"/>
	<rule ref="SlevomatCodingStandard.Classes.SuperfluousAbstractClassNaming"/>
	<rule ref="SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming"/>
	<!-- <rule ref="SlevomatCodingStandard.ControlStructures.DisallowShortTernaryOperator"/>-->
	<!-- <rule ref="SlevomatCodingStandard.Namespaces.RequireOneNamespaceInFile"/> -->
	<!-- <rule ref="SlevomatCodingStandard.PHP.ShortList"/> -->
	<rule ref="SlevomatCodingStandard.Files.TypeNameMatchesFileName">
		<properties>
			<property name="rootNamespaces" type="array" value="src=>AsyncConnection,tests=>AsyncConnection,tests-examples=>AsyncConnection\Examples"/>
		</properties>
	</rule>
</ruleset>
